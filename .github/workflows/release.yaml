name: "Release libraries"

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - {
              runner: macos-latest,
              osname: macOS,
              arch: amd64,
              target: x86_64-apple-darwin,
              extension: "dylib",
              releasename: "libcircomkit_ffi",
            }

          - {
              runner: macos-latest,
              osname: macOS,
              arch: arm64,
              target: aarch64-apple-darwin,
              extension: "dylib",
              releasename: "libcircomkit_ffi",
            }
          - {
              runner: ubuntu-latest,
              osname: linux,
              arch: amd64,
              target: x86_64-unknown-linux-gnu,
              extension: "so",
              releasename: "libcircomkit_ffi",
            }
          - {
              runner: ubuntu-latest,
              osname: linux,
              arch: arm64,
              target: aarch64-unknown-linux-gnu,
              extension: "so",
              releasename: "libcircomkit_ffi",
            }
          - {
              runner: windows-latest,
              osname: windows,
              arch: amd64,
              target: x86_64-pc-windows-msvc,
              extension: "dll",
              releasename: "circomkit_ffi",
            }

    name: Release - ${{ matrix.osname }}

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: "build"
          target: ${{ matrix.target }}
          args: "--locked --release"
          strip: true

      - name: Prepare Release
        run: mv target/${{ matrix.target }}/release/${{ matrix.releasename }}.${{ matrix.extension }} ./${{ matrix.releasename }}-${{ matrix.osname }}-${{ matrix.arch }}.${{ matrix.extension }}

      - name: Upload Launch Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.releasename }}-${{ matrix.osname }}-${{ matrix.arch }}.${{ matrix.extension }}
          path: ${{ matrix.releasename }}-${{ matrix.osname }}-${{ matrix.arch }}.${{ matrix.extension }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetches all tags and history, TODO: do better?

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ./artifacts

      - name: Create release with artifacts
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.event.release.name }}
          tag: ${{ github.event.release.tag_name }}
          artifacts: "artifacts/*"
          artifactContentType: application/octet-stream
          allowUpdates: true
          makeLatest: false
